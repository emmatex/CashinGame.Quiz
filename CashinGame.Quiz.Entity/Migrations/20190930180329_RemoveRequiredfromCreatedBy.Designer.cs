// <auto-generated />
using System;
using CashinGame.Quiz.Entity.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CashinGame.Quiz.Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190930180329_RemoveRequiredfromCreatedBy")]
    partial class RemoveRequiredfromCreatedBy
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CashinGame.Quiz.Entity.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<string>("Color");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasMaxLength(200);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasMaxLength(128);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("ModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Category");
                });

            modelBuilder.Entity("CashinGame.Quiz.Entity.Models.Option", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn");

                    b.Property<bool>("IsCorrect")
                        .HasColumnName("IsCorrect");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnName("Label")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasMaxLength(128);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("ModifiedOn");

                    b.Property<Guid>("QuestionId")
                        .HasColumnName("QuestionId")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("Value")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.HasIndex("Value", "IsCorrect");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("CashinGame.Quiz.Entity.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId")
                        .HasColumnName("CategoryId")
                        .HasMaxLength(128);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnName("Level")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasMaxLength(128);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("ModifiedOn");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnName("QuestionText")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("QuestionText")
                        .IsUnique();

                    b.ToTable("Question");
                });

            modelBuilder.Entity("CashinGame.Quiz.Entity.Models.Option", b =>
                {
                    b.HasOne("CashinGame.Quiz.Entity.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CashinGame.Quiz.Entity.Models.Question", b =>
                {
                    b.HasOne("CashinGame.Quiz.Entity.Models.Category", "Category")
                        .WithMany("Questions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
